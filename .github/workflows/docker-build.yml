name: Build, Push, and Test Multi-Arch Docker Image

on:
  push:
    branches:
      - main # Or your default branch
  pull_request:
    branches:
      - main # Also run on pull requests

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

  # --- New Job to Test the Container ---
  test-container:
    # This job runs after 'build-and-push' is complete
    needs: build-and-push
    runs-on: ubuntu-latest
    # Use a strategy matrix to test both architectures
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run container and test library imports
        run: |
          docker run --rm --platform ${{ matrix.platform }} ghcr.io/${{ github.repository }}:${{ github.sha }} \
          python3 -c "import essentia; import tensorflow; print('âœ… Essentia and TensorFlow imported successfully on ${{ matrix.platform }}')"